apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "castor.fullname" . }}
  labels:
    {{- include "castor.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "castor.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "castor.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.castor.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "castor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.castor.image.registry }}/{{ .Values.castor.image.repository }}:{{ .Values.castor.image.tag }}"
          imagePullPolicy: {{ .Values.castor.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.castor.springActiveProfiles }}
            - name: IS_MASTER
              value: "{{ .Values.castor.isMaster }}"
            - name: SLAVE_URI
              value: "{{ .Values.castor.slaveUri }}"
            - name: NO_SSL_VALIDATION
              value: "{{ .Values.castor.noSslValidation }}"
            - name: REDIS_HOST
              value: {{ .Values.castor.redis.host }}
            - name: REDIS_PORT
              value:  "{{ .Values.castor.redis.port }}"
            - name: MINIO_ENDPOINT
              value: {{ .Values.castor.minio.endpoint }}
            - name: DB_HOST
              value: {{ .Values.castor.db.host }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.castor.db.userSecretName }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.castor.db.passwordSecretName }}
                  key: password
            - name: DB_PORT
              value: "{{ .Values.castor.db.port }}"
            - name: LOG_LEVEL
              value: "{{ .Values.castor.logLevel }}"
          ports:
            - name: mgmt
              containerPort: 10100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 10100
            periodSeconds: {{ .Values.castor.probes.liveness.period }}
            initialDelaySeconds: {{ .Values.castor.probes.liveness.initialDelay }}
            failureThreshold: {{ .Values.castor.probes.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 10100
            periodSeconds: {{ .Values.castor.probes.readiness.period }}
            initialDelaySeconds: {{ .Values.castor.probes.readiness.initialDelay }}
            failureThreshold: {{ .Values.castor.probes.readiness.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
